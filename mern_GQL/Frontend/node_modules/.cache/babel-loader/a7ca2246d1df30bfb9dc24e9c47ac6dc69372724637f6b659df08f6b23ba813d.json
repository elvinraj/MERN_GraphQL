{"ast":null,"code":"var _jsxFileName = \"/home/arokee/my-GIT-huB_repos/mern_GQL/Frontend/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_ALL_QUOTES } from \"../gqloperations/queries\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL_QUOTES);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading!!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    console.log(error.message);\n  }\n  if (data.quotes.length == 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No Quotes available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  // useEffect(() => {\n  //   fetch(\"http://localhost:4000/\", {\n  //     method: \"post\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({\n  //       query: `query getAllUsers{\n  //           users{\n  //             _id\n  //             firstName\n  //             lastName\n  //             email\n  //           }\n  //         }`,\n  //     }),\n  //   })\n  //     .then((res) => res.json())\n  //     .then((data) => console.log(\"dataf\", data));\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: data.quotes.map(quote => {\n      return /*#__PURE__*/_jsxDEV(\"blockquote\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: quote.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${quote.by._id}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"right-align\",\n            children: [\"~\", quote.by.firstName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useQuery","GET_ALL_QUOTES","Link","jsxDEV","_jsxDEV","Home","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","message","quotes","length","className","map","quote","name","to","by","_id","firstName","_c","$RefreshReg$"],"sources":["/home/arokee/my-GIT-huB_repos/mern_GQL/Frontend/src/components/Home.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_ALL_QUOTES } from \"../gqloperations/queries\";\nimport { Link } from \"react-router-dom\";\nexport default function Home() {\n  const { loading, error, data } = useQuery(GET_ALL_QUOTES);\n\n  if (loading) {\n    return <h1>loading!!!!</h1>;\n  }\n\n  if (error) {\n    console.log(error.message);\n  }\n\n  if (data.quotes.length == 0) {\n    return <h2>No Quotes available</h2>;\n  }\n  // useEffect(() => {\n  //   fetch(\"http://localhost:4000/\", {\n  //     method: \"post\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({\n  //       query: `query getAllUsers{\n  //           users{\n  //             _id\n  //             firstName\n  //             lastName\n  //             email\n  //           }\n  //         }`,\n  //     }),\n  //   })\n  //     .then((res) => res.json())\n  //     .then((data) => console.log(\"dataf\", data));\n  // }, []);\n  return (\n    <div className=\"container\">\n      {data.quotes.map((quote) => {\n        return (\n          <blockquote>\n            <h6>{quote.name}</h6>\n            <Link to={`/profile/${quote.by._id}`}>\n              <p className=\"right-align\">~{quote.by.firstName}</p>\n            </Link>\n          </blockquote>\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAACC,cAAc,CAAC;EAEzD,IAAIM,OAAO,EAAE;IACX,oBAAOH,OAAA;MAAAM,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC7B;EAEA,IAAIN,KAAK,EAAE;IACTO,OAAO,CAACC,GAAG,CAACR,KAAK,CAACS,OAAO,CAAC;EAC5B;EAEA,IAAIR,IAAI,CAACS,MAAM,CAACC,MAAM,IAAI,CAAC,EAAE;IAC3B,oBAAOf,OAAA;MAAAM,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACrC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEV,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAV,QAAA,EACvBD,IAAI,CAACS,MAAM,CAACG,GAAG,CAAEC,KAAK,IAAK;MAC1B,oBACElB,OAAA;QAAAM,QAAA,gBACEN,OAAA;UAAAM,QAAA,EAAKY,KAAK,CAACC;QAAI;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBV,OAAA,CAACF,IAAI;UAACsB,EAAE,EAAG,YAAWF,KAAK,CAACG,EAAE,CAACC,GAAI,EAAE;UAAAhB,QAAA,eACnCN,OAAA;YAAGgB,SAAS,EAAC,aAAa;YAAAV,QAAA,GAAC,GAAC,EAACY,KAAK,CAACG,EAAE,CAACE,SAAS;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAEjB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACR,EAAA,CAhDuBD,IAAI;EAAA,QACOL,QAAQ;AAAA;AAAA4B,EAAA,GADnBvB,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}