{"ast":null,"code":"var _jsxFileName = \"/home/arokee/my-GIT-huB_repos/mern_GQL/Frontend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\",\n  cache: new InMemoryCache(),\n  headers: {\n    authorization: localStorage.getItem(\"tokenn\") || \"\"\n  }\n});\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \",\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","ApolloClient","InMemoryCache","ApolloProvider","gql","jsxDEV","_jsxDEV","client","uri","cache","headers","authorization","localStorage","getItem","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/arokee/my-GIT-huB_repos/mern_GQL/Frontend/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  gql,\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\",\n  cache: new InMemoryCache(),\n  headers: {\n    authorization: localStorage.getItem(\"tokenn\") || \"\",\n  },\n});\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n      ,\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SACEC,YAAY,EACZC,aAAa,EACbC,cAAc,EACdC,GAAG,QACE,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,MAAM,GAAG,IAAIN,YAAY,CAAC;EAC9BO,GAAG,EAAE,wBAAwB;EAC7BC,KAAK,EAAE,IAAIP,aAAa,CAAC,CAAC;EAC1BQ,OAAO,EAAE;IACPC,aAAa,EAAEC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI;EACnD;AACF,CAAC,CAAC;AAEF,MAAMC,IAAI,GAAGjB,QAAQ,CAACkB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTZ,OAAA,CAACV,KAAK,CAACuB,UAAU;EAAAC,QAAA,eACfd,OAAA,CAACN,aAAa;IAAAoB,QAAA,gBACZd,OAAA,CAACH,cAAc;MAACI,MAAM,EAAEA,MAAO;MAAAa,QAAA,eAC7Bd,OAAA,CAACR,GAAG;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,KAEnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAe;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CACpB,CAAC;;AAED;AACA;AACA;AACAzB,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}